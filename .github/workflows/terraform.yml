name: 'Terraform Apply'

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: 'Terraform Plan and Apply'
    runs-on: ubuntu-latest

    steps:
      # 1. Проверяем репозиторий
      - name: 'Checkout repository'
        uses: actions/checkout@v2

      # 2. Устанавливаем Terraform
      - name: 'Set up Terraform'
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.4.0

      # 3. Настройка AWS credentials
      - name: 'Configure AWS credentials'
        id: aws-credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # 4. Сохранение токена на каждой стадии
      - name: 'Save AWS Token'
        run: echo "AWS_SESSION_TOKEN=${{ steps.aws-credentials.outputs.aws_session_token }}" >> $GITHUB_ENV

      # 5. Проверка формата Terraform
      - name: 'Check Terraform formatting'
        run: terraform fmt -check

      # 6. Проверка валидности конфигурации Terraform
      - name: 'Validate Terraform configuration'
        run: terraform validate

      # 7. Инициализация Terraform
      - name: 'Initialize Terraform'
        run: terraform init
        env:
          TF_LOG: DEBUG
          TF_VAR_vpc_id: ${{ secrets.VPC_ID }}

      # 8. Планирование Terraform
      - name: 'Terraform Plan'
        run: terraform plan
        env:
          TF_LOG: DEBUG
          TF_VAR_vpc_id: ${{ secrets.VPC_ID }}

      # 9. Применение Terraform
      - name: 'Terraform Apply'
        run: terraform apply -auto-approve
        env:
          TF_LOG: DEBUG
          TF_VAR_vpc_id: ${{ secrets.VPC_ID }}

      # 10. Вывод состояния Terraform для отладки
      - name: 'Output Terraform State'
        run: terraform show
        env:
          TF_LOG: DEBUG

      # 11. Вывод переменных окружения (дебаг)
      - name: 'Debug Environment Variables'
        run: env
